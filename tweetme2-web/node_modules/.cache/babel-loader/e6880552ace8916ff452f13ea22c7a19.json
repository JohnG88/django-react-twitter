{"ast":null,"code":"function lookup(method, endpoint, callback, data) {\n  let jsonData;\n\n  if (data) {\n    jsonData = JSON.stringify(data);\n  } // New instance of class\n\n\n  const xhr = new XMLHttpRequest(); // like python, xhr = new SomeClass()\n\n  const url = `http://127.0.0.1:8000/api${endpoint}`;\n  xhr.responseType = 'json';\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({\n      message: \"The request was an error.\"\n    }, 400);\n  };\n\n  xhr.send(jsonData);\n}\n\nexport function createTweet(newTweet, callback) {\n  lookup('POST', '/tweets/create', callback, {\n    content: newTweet\n  });\n}\nexport function loadTweets(callback) {\n  lookup('GET', '/tweets/', callback);\n}","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/lookup/components.js"],"names":["lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","onload","response","status","onerror","e","console","log","message","send","createTweet","newTweet","content","loadTweets"],"mappings":"AAAA,SAASA,MAAT,CAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,IAA5C,EAAkD;AAC9C,MAAIC,QAAJ;;AACA,MAAID,IAAJ,EAAU;AACNC,IAAAA,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX;AACH,GAJ6C,CAK9C;;;AACA,QAAMI,GAAG,GAAG,IAAIC,cAAJ,EAAZ,CAN8C,CAMZ;;AAElC,QAAMC,GAAG,GAAI,4BAA2BR,QAAS,EAAjD;AAEAM,EAAAA,GAAG,CAACG,YAAJ,GAAmB,MAAnB;AACAH,EAAAA,GAAG,CAACI,IAAJ,CAASX,MAAT,EAAiBS,GAAjB;;AACAF,EAAAA,GAAG,CAACK,MAAJ,GAAa,YAAY;AACrBV,IAAAA,QAAQ,CAACK,GAAG,CAACM,QAAL,EAAeN,GAAG,CAACO,MAAnB,CAAR;AACH,GAFD;;AAGAP,EAAAA,GAAG,CAACQ,OAAJ,GAAc,UAAUC,CAAV,EAAa;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAd,IAAAA,QAAQ,CAAC;AAAEiB,MAAAA,OAAO,EAAE;AAAX,KAAD,EAA2C,GAA3C,CAAR;AACH,GAHD;;AAIAZ,EAAAA,GAAG,CAACa,IAAJ,CAAShB,QAAT;AACH;;AAED,OAAO,SAASiB,WAAT,CAAqBC,QAArB,EAA+BpB,QAA/B,EAAyC;AAC5CH,EAAAA,MAAM,CAAC,MAAD,EAAS,gBAAT,EAA2BG,QAA3B,EAAqC;AAACqB,IAAAA,OAAO,EAAED;AAAV,GAArC,CAAN;AACH;AAED,OAAO,SAASE,UAAT,CAAoBtB,QAApB,EAA8B;AACjCH,EAAAA,MAAM,CAAC,KAAD,EAAQ,UAAR,EAAoBG,QAApB,CAAN;AACH","sourcesContent":["function lookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n    if (data) {\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n    // New instance of class\r\n    const xhr = new XMLHttpRequest(); // like python, xhr = new SomeClass()\r\n    \r\n    const url = `http://127.0.0.1:8000/api${endpoint}`;\r\n\r\n    xhr.responseType = 'json';\r\n    xhr.open(method, url);\r\n    xhr.onload = function () {\r\n        callback(xhr.response, xhr.status);\r\n    };\r\n    xhr.onerror = function (e) {\r\n        console.log(e);\r\n        callback({ message: \"The request was an error.\" }, 400);\r\n    };\r\n    xhr.send(jsonData);\r\n}\r\n\r\nexport function createTweet(newTweet, callback) {\r\n    lookup('POST', '/tweets/create', callback, {content: newTweet})\r\n}\r\n\r\nexport function loadTweets(callback) {\r\n    lookup('GET', '/tweets/', callback)\r\n}"]},"metadata":{},"sourceType":"module"}