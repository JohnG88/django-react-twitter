{"ast":null,"code":"import _toConsumableArray from\"C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{loadTweets}from\"../lookup\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function TweetsComponent(props){// createRef will allow to get value of textarea\nvar textAreaRef=/*#__PURE__*/React.createRef();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),newTweets=_useState2[0],setNewTweets=_useState2[1];var handleSubmit=function handleSubmit(event){event.preventDefault();console.log(event);var newVal=textAreaRef.current.value;var tempNewTweets=_toConsumableArray(newTweets);// push sends to end of array, unshift to top of array\ntempNewTweets.unshift({content:newVal,likes:0,id:12313});setNewTweets(tempNewTweets);console.log(newVal);textAreaRef.current.value='';};return/*#__PURE__*/_jsxs(\"div\",{className:props.className,children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-12 mb-3 \",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"textarea\",{ref:textAreaRef,required:true,className:\"form-control\",name:\"tweet\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary my-3\",children:\"Tweet\"})]})}),/*#__PURE__*/_jsx(TweetsList,{newTweets:newTweets})]});}export function TweetsList(props){var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tweetsInit=_useState4[0],setTweetsInit=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),tweets=_useState6[0],setTweets=_useState6[1];useEffect(function(){var final=_toConsumableArray(props.newTweets).concat(tweetsInit);if(final.length!==tweets.length){setTweets(final);}},[props.newTweets,tweets,tweetsInit]);useEffect(function(){var myCallback=function myCallback(response,status){// console.log(response, status)\nif(status===200){setTweetsInit(response);}else{alert(\"There was an error!\");}};loadTweets(myCallback);},[tweetsInit]);return tweets.map(function(item,index){return/*#__PURE__*/_jsx(Tweet,{tweet:item,className:\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"},\"\".concat(index,\"-{item.id}\"));});}export function ActionBtn(props){var tweet=props.tweet,action=props.action;// remember likes is variable and setLikes is to update variable\nvar _useState7=useState(tweet.likes?tweet.likes:0),_useState8=_slicedToArray(_useState7,2),likes=_useState8[0],setLikes=_useState8[1];var _useState9=useState(tweet.userLike===true?true:false),_useState10=_slicedToArray(_useState9,2),userLike=_useState10[0],setUserLike=_useState10[1];var className=props.className?props.className:\"btn btn-primary btn-sm\";// if action.display then show action.display else show 'Action'\nvar actionDisplay=action.display?action.display:\"Action\";// if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\nvar display=action.type===\"like\"?\"\".concat(likes,\" \").concat(actionDisplay):actionDisplay;var handleClick=function handleClick(event){event.preventDefault();if(action.type===\"like\"){if(userLike===true){// perhaps unlike it?\nsetLikes(likes-1);setUserLike(false);}else{setLikes(likes+1);setUserLike(true);}}};return/*#__PURE__*/_jsx(\"button\",{className:className,onClick:handleClick,children:display});}export function Tweet(props){var tweet=props.tweet;var className=props.className?props.className:\"col-10 mx-auto col-md-6\";return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:className,children:[/*#__PURE__*/_jsxs(\"p\",{children:[tweet.id,\" - \",tweet.content]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn btn-group\",children:[/*#__PURE__*/_jsx(ActionBtn,{tweet:tweet,action:{type:\"like\",display:\"Likes\"}}),/*#__PURE__*/_jsx(ActionBtn,{tweet:tweet,action:{type:\"unlike\",display:\"Unlike\"}}),/*#__PURE__*/_jsx(ActionBtn,{tweet:tweet,action:{type:\"retweet\",display:\"Retweet\"}})]})]})});}","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleSubmit","event","preventDefault","console","log","newVal","current","value","tempNewTweets","unshift","content","likes","id","className","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","final","concat","length","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","setLikes","userLike","setUserLike","actionDisplay","display","type","handleClick","Tweet"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { loadTweets } from \"../lookup\";\r\n\r\nexport function TweetsComponent(props) {\r\n    // createRef will allow to get value of textarea\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(event);\r\n        const newVal = textAreaRef.current.value;\r\n        let tempNewTweets = [...newTweets]\r\n        // push sends to end of array, unshift to top of array\r\n        tempNewTweets.unshift({\r\n            content: newVal,\r\n            likes: 0,\r\n            id: 12313\r\n        })\r\n        setNewTweets(tempNewTweets)\r\n        console.log(newVal);\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <div className=\"col-12 mb-3 \">\r\n                <form onSubmit={handleSubmit}>\r\n                    <textarea ref={textAreaRef} required={true} className=\"form-control\" name=\"tweet\">\r\n                        \r\n                    </textarea>\r\n                    <button type=\"submit\"className=\"btn btn-primary my-3\">Tweet</button>\r\n                </form>\r\n            </div>\r\n            <TweetsList newTweets={newTweets}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([])\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n        \r\n    },[props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n        const myCallback = (response, status) => {\r\n            // console.log(response, status)\r\n            if (status === 200) {\r\n                setTweetsInit(response);\r\n            } else {\r\n                alert(\"There was an error!\");\r\n            }\r\n        };\r\n        loadTweets(myCallback);\r\n    }, [tweetsInit]);\r\n    return tweets.map((item, index) => {\r\n        return (\r\n            <Tweet\r\n                tweet={item}\r\n                key={`${index}-{item.id}`}\r\n                className=\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\r\n            />\r\n        );\r\n    });\r\n}\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action } = props;\r\n    // remember likes is variable and setLikes is to update variable\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\r\n    const className = props.className\r\n        ? props.className\r\n        : \"btn btn-primary btn-sm\";\r\n    // if action.display then show action.display else show 'Action'\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n    // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\r\n    const display =\r\n        action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        if (action.type === \"like\") {\r\n            if (userLike === true) {\r\n                // perhaps unlike it?\r\n                setLikes(likes - 1);\r\n                setUserLike(false);\r\n            } else {\r\n                setLikes(likes + 1);\r\n                setUserLike(true);\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <button className={className} onClick={handleClick}>\r\n            {display}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const { tweet } = props;\r\n    const className = props.className\r\n        ? props.className\r\n        : \"col-10 mx-auto col-md-6\";\r\n    return (\r\n        <>\r\n            <div className={className}>\r\n                <p>\r\n                    {tweet.id} - {tweet.content}\r\n                </p>\r\n                <div className=\"btn btn-group\">\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"like\", display: \"Likes\" }}\r\n                    />\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                    />\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}