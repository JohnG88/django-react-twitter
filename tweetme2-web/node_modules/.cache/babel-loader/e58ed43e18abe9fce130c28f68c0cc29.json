{"ast":null,"code":"import _toConsumableArray from\"C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{apiTweetFeed}from'./lookup';import{Tweet}from'./detail';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function FeedList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tweetsInit=_useState2[0],setTweetsInit=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tweets=_useState4[0],setTweets=_useState4[1];// useState is set to null because next url will eventually become null\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),nextUrl=_useState6[0],setNextUrl=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),tweetsDidSet=_useState8[0],setTweetsDidSet=_useState8[1];useEffect(function(){var final=_toConsumableArray(props.newTweets).concat(tweetsInit);if(final.length!==tweets.length){setTweets(final);}},[props.newTweets,tweets,tweetsInit]);useEffect(function(){if(tweetsDidSet===false){var handleTweetListLookup=function handleTweetListLookup(response,status){// console.log(response, status)\nif(status===200){setNextUrl(response.next);setTweetsInit(response.results);setTweetsDidSet(true);}else{alert(\"There was an error!\");}};apiTweetFeed(handleTweetListLookup);}},[tweetsInit,tweetsDidSet,setTweetsDidSet,props.username]);var handleDidRetweet=function handleDidRetweet(newTweet){var updateTweetsInit=_toConsumableArray(tweetsInit);updateTweetsInit.unshift(newTweet);setTweetsInit(updateTweetsInit);var updateFinalTweets=_toConsumableArray(tweets);updateFinalTweets.unshift(tweets);setTweets(updateFinalTweets);};var handleLoadNext=function handleLoadNext(event){event.preventDefault();if(nextUrl!==null){var handleLoadNextResponse=function handleLoadNextResponse(response,status){if(status===200){setNextUrl(response.next);var newTweets=_toConsumableArray(tweets).concat(response.results);setTweetsInit(newTweets);setTweets(newTweets);}else{alert(\"There was an error!\");}};apiTweetFeed(handleLoadNextResponse,nextUrl);console.log('nextUrl',nextUrl);console.log('next response');}};return/*#__PURE__*/_jsxs(React.Fragment,{children:[tweets.map(function(item,index){return/*#__PURE__*/_jsx(Tweet,{tweet:item,didRetweet:handleDidRetweet,className:\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"},\"\".concat(index,\"-{item.id}\"));}),nextUrl!==null&&/*#__PURE__*/_jsx(\"button\",{onClick:handleLoadNext,className:\"btn btn-outline-primary\",children:\"Load next\"})]});}","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/tweets/feed.js"],"names":["React","useEffect","useState","apiTweetFeed","Tweet","FeedList","props","tweetsInit","setTweetsInit","tweets","setTweets","nextUrl","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","length","handleTweetListLookup","response","status","next","results","alert","username","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","handleLoadNext","event","preventDefault","handleLoadNextResponse","console","log","map","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {apiTweetFeed} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    // useState is set to null because next url will eventually become null\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit);\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final);\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                // console.log(response, status)\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results);\r\n                    setTweetsDidSet(true);\r\n                } else {\r\n                    alert(\"There was an error!\");\r\n                }\r\n            };\r\n            apiTweetFeed(handleTweetListLookup);\r\n        }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit= [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    const newTweets = [...tweets].concat(response.results)\r\n                    setTweetsInit(newTweets);\r\n                    setTweets(newTweets);\r\n                } else {\r\n                    alert(\"There was an error!\");\r\n                }\r\n            }\r\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n            console.log('nextUrl', nextUrl)\r\n            console.log('next response');\r\n        }\r\n    }\r\n    return <React.Fragment>\r\n        {tweets.map((item, index) => {\r\n            return (\r\n                <Tweet\r\n                    tweet={item}\r\n                    didRetweet={handleDidRetweet}\r\n                    key={`${index}-{item.id}`}\r\n                    className=\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\r\n                />\r\n            );\r\n        })}\r\n        {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n}"]},"metadata":{},"sourceType":"module"}