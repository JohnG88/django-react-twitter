{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johna\\\\Documents\\\\django-twitter-react\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { apiTweetAction, apiTweetCreate, apiTweetList } from \"./lookup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TweetsComponent(props) {\n  _s();\n\n  // createRef will allow to get value of textarea\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      // push sends to end of array, unshift to top of array\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occurred please try again.\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3 \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\",\n          name: \"tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-3\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c = TweetsComponent;\nexport function TweetsList(props) {\n  _s2();\n\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        // console.log(response, status)\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error!\");\n        }\n      };\n\n      apiTweetList(handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet]);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n_s2(TweetsList, \"P6qXvmm+5AyDsJ0n/lMk6wZyO4Q=\");\n\n_c2 = TweetsList;\nexport function ActionBtn(props) {\n  _s3();\n\n  const {\n    tweet,\n    action\n  } = props; // remember likes is variable and setLikes is to update variable\n\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0); // const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n\n  const className = props.className ? props.className : \"btn btn-primary btn-sm\"; // if action.display then show action.display else show 'Action'\n\n  const actionDisplay = action.display ? action.display : \"Action\"; // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\n\n  const display = action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\n\n  const handleActionBackendEvent = (response, status) => {\n    console.log(response, status);\n\n    if (status === 200) {\n      setLikes(response.likes); // setUserLike(true)\n    }\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(ActionBtn, \"lqFvXr1nBdlwSt/sxEaEZwfzCw4=\");\n\n_c3 = ActionBtn;\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"tweet.parent ? \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-11 mx-auto p-3 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0 text-muted small\",\n          children: \"Retweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tweet, {\n          className: \" \",\n          tweet: tweet.parent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 28\n    }, this), \" : null\"]\n  }, void 0, true);\n}\n_c4 = ParentTweet;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [tweet.id, \" - \", tweet.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ParentTweet, {\n          tweet: tweet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"like\",\n            display: \"Likes\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"unlike\",\n            display: \"Unlike\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"retweet\",\n            display: \"Retweet\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c5 = Tweet;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TweetsComponent\");\n$RefreshReg$(_c2, \"TweetsList\");\n$RefreshReg$(_c3, \"ActionBtn\");\n$RefreshReg$(_c4, \"ParentTweet\");\n$RefreshReg$(_c5, \"Tweet\");","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","apiTweetAction","apiTweetCreate","apiTweetList","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleBackendUpdate","response","status","tempNewTweets","unshift","console","log","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","handleTweetListLookup","map","item","index","ActionBtn","tweet","action","likes","setLikes","actionDisplay","display","type","handleActionBackendEvent","handleClick","id","ParentTweet","parent","Tweet","content"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiTweetAction, apiTweetCreate, apiTweetList } from \"./lookup\";\r\n\r\nexport function TweetsComponent(props) {\r\n    // createRef will allow to get value of textarea\r\n    const textAreaRef = React.createRef();\r\n    const [newTweets, setNewTweets] = useState([]);\r\n\r\n    const handleBackendUpdate = (response, status) => {\r\n        // backend api response handler\r\n        let tempNewTweets = [...newTweets];\r\n        if (status === 201) {\r\n            // push sends to end of array, unshift to top of array\r\n            tempNewTweets.unshift(response);\r\n            setNewTweets(tempNewTweets);\r\n        } else {\r\n            console.log(response);\r\n            alert(\"An error occurred please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(event);\r\n        const newVal = textAreaRef.current.value;\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate);\r\n        textAreaRef.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <div className=\"col-12 mb-3 \">\r\n                <form onSubmit={handleSubmit}>\r\n                    <textarea\r\n                        ref={textAreaRef}\r\n                        required={true}\r\n                        className=\"form-control\"\r\n                        name=\"tweet\"\r\n                    ></textarea>\r\n                    <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n                        Tweet\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <TweetsList newTweets={newTweets} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit);\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final);\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                // console.log(response, status)\r\n                if (status === 200) {\r\n                    setTweetsInit(response);\r\n                    setTweetsDidSet(true);\r\n                } else {\r\n                    alert(\"There was an error!\");\r\n                }\r\n            };\r\n            apiTweetList(handleTweetListLookup);\r\n        }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet]);\r\n    return tweets.map((item, index) => {\r\n        return (\r\n            <Tweet\r\n                tweet={item}\r\n                key={`${index}-{item.id}`}\r\n                className=\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\r\n            />\r\n        );\r\n    });\r\n}\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action } = props;\r\n    // remember likes is variable and setLikes is to update variable\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    // const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\r\n    const className = props.className\r\n        ? props.className\r\n        : \"btn btn-primary btn-sm\";\r\n    // if action.display then show action.display else show 'Action'\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n    // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\r\n    const display =\r\n        action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status);\r\n        if (status === 200) {\r\n            setLikes(response.likes);\r\n            // setUserLike(true)\r\n        }\r\n    };\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n    };\r\n    return (\r\n        <button className={className} onClick={handleClick}>\r\n            {display}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport function ParentTweet(props) {\r\n    const {tweet} = props;\r\n    return <> \r\n            tweet.parent ? <div className=\"row\">\r\n                <div className='col-11 mx-auto p-3 border rounded'>\r\n                    <p className=\"mb-0 text-muted small\">Retweet</p>\r\n                    <Tweet\r\n                        className=\" \"\r\n                        tweet={tweet.parent}\r\n                    />\r\n                </div>\r\n            </div> : null\r\n    </>\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const { tweet } = props;\r\n    const className = props.className\r\n        ? props.className\r\n        : \"col-10 mx-auto col-md-6\";\r\n    return (\r\n        <>\r\n            <div className={className}>\r\n                <div>\r\n                    <p>\r\n                        {tweet.id} - {tweet.content}\r\n                    </p>\r\n                    <ParentTweet tweet={tweet} />\r\n                </div>\r\n                <div className=\"btn btn-group\">\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"like\", display: \"Likes\" }}\r\n                    />\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                    />\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}