{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johna\\\\Documents\\\\django-twitter-react\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\buttons.js\";\nimport React from \"react\";\nimport { apiTweetAction } from \"./lookup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action,\n    didPerformAction\n  } = props;\n  const likes = tweet.likes ? tweet.likes : 0; // remember likes is variable and setLikes is to update variable\n  // const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  // const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n\n  const className = props.className ? props.className : \"btn btn-primary btn-sm\"; // if action.display then show action.display else show 'Action'\n\n  const actionDisplay = action.display ? action.display : \"Action\"; // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\n\n  const display = action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\n\n  const handleActionBackendEvent = (response, status) => {\n    console.log(response, status);\n\n    if ((status === 200 || status === 201) && didPerformAction) {\n      // setLikes(response.likes);\n      didPerformAction(response, status); // setUserLike(true)\n    }\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = ActionBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionBtn\");","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/tweets/buttons.js"],"names":["React","apiTweetAction","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","type","handleActionBackendEvent","response","status","console","log","handleClick","event","preventDefault","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC7B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,MAAsCH,KAA5C;AACA,QAAMI,KAAK,GAAGH,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACG,KAApB,GAA4B,CAA1C,CAF6B,CAG7B;AACA;AACA;;AACA,QAAMC,SAAS,GAAGL,KAAK,CAACK,SAAN,GACZL,KAAK,CAACK,SADM,GAEZ,wBAFN,CAN6B,CAS7B;;AACA,QAAMC,aAAa,GAAGJ,MAAM,CAACK,OAAP,GAAiBL,MAAM,CAACK,OAAxB,GAAkC,QAAxD,CAV6B,CAW7B;;AACA,QAAMA,OAAO,GACTL,MAAM,CAACM,IAAP,KAAgB,MAAhB,GAA0B,GAAEJ,KAAM,IAAGE,aAAc,EAAnD,GAAuDA,aAD3D;;AAEA,QAAMG,wBAAwB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACnDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,MAAtB;;AACA,QAAI,CAACA,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAA9B,KAAsCR,gBAA1C,EAA4D;AACxD;AACAA,MAAAA,gBAAgB,CAACO,QAAD,EAAWC,MAAX,CAAhB,CAFwD,CAGxD;AACH;AACJ,GAPD;;AAQA,QAAMG,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAlB,IAAAA,cAAc,CAACG,KAAK,CAACgB,EAAP,EAAWf,MAAM,CAACM,IAAlB,EAAwBC,wBAAxB,CAAd;AACH,GAHD;;AAIA,sBACI;AAAQ,IAAA,SAAS,EAAEJ,SAAnB;AAA8B,IAAA,OAAO,EAAES,WAAvC;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KA/BeR,S","sourcesContent":["import React from \"react\";\r\n\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction } = props;\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    // remember likes is variable and setLikes is to update variable\r\n    // const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    // const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\r\n    const className = props.className\r\n        ? props.className\r\n        : \"btn btn-primary btn-sm\";\r\n    // if action.display then show action.display else show 'Action'\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n    // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\r\n    const display =\r\n        action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status);\r\n        if ((status === 200 || status === 201) && didPerformAction) {\r\n            // setLikes(response.likes);\r\n            didPerformAction(response, status)\r\n            // setUserLike(true)\r\n        }\r\n    };\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n    };\r\n    return (\r\n        <button className={className} onClick={handleClick}>\r\n            {display}\r\n        </button>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}