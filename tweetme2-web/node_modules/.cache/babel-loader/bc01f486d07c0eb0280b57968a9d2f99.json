{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johna\\\\Documents\\\\django-twitter-react\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\create.js\";\nimport React from \"react\";\nimport { apiTweetCreate } from \"./lookup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TweetCreate(props) {\n  console.log(props); // const {username} = props\n  // createRef will allow to get value of textarea\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const {\n    didTweet\n  } = props; // const [newTweets, setNewTweets] = useState([]);\n  // const canTweet = props.canTweet === 'false' ? false : true\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    // let tempNewTweets = [...newTweets];\n    if (status === 201) {\n      // push sends to end of array, unshift to top of array\n      // tempNewTweets.unshift(response);\n      didTweet(response);\n    } else {\n      console.log(response);\n      alert(\"An error occurred please try again.\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textAreaRef,\n        required: true,\n        className: \"form-control\",\n        name: \"tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary my-3\",\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_c = TweetCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetCreate\");","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/tweets/create.js"],"names":["React","apiTweetCreate","TweetCreate","props","console","log","textAreaRef","createRef","didTweet","handleBackendUpdate","response","status","alert","handleSubmit","event","preventDefault","newVal","current","value","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAD+B,CAE/B;AACA;;AACA,QAAMG,WAAW,gBAAGN,KAAK,CAACO,SAAN,EAApB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAaL,KAAnB,CAL+B,CAM/B;AAEA;;AACA,QAAMM,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC9C;AACA;AACA,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAChB;AACA;AACAH,MAAAA,QAAQ,CAACE,QAAD,CAAR;AACH,KAJD,MAIO;AACHN,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACAE,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,GAXD;;AAaA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,UAAME,MAAM,GAAGV,WAAW,CAACW,OAAZ,CAAoBC,KAAnC,CAH4B,CAI5B;;AACAjB,IAAAA,cAAc,CAACe,MAAD,EAASP,mBAAT,CAAd;AACAH,IAAAA,WAAW,CAACW,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAEf,KAAK,CAACgB,SAAtB;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEN,YAAhB;AAAA,8BACI;AACI,QAAA,GAAG,EAAEP,WADT;AAEI,QAAA,QAAQ,EAAE,IAFd;AAGI,QAAA,SAAS,EAAC,cAHd;AAII,QAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;KA9CeJ,W","sourcesContent":["import React from \"react\"; \r\n\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n    console.log(props);\r\n    // const {username} = props\r\n    // createRef will allow to get value of textarea\r\n    const textAreaRef = React.createRef();\r\n    const {didTweet} = props\r\n    // const [newTweets, setNewTweets] = useState([]);\r\n    \r\n    // const canTweet = props.canTweet === 'false' ? false : true\r\n    const handleBackendUpdate = (response, status) => {\r\n        // backend api response handler\r\n        // let tempNewTweets = [...newTweets];\r\n        if (status === 201) {\r\n            // push sends to end of array, unshift to top of array\r\n            // tempNewTweets.unshift(response);\r\n            didTweet(response);\r\n        } else {\r\n            console.log(response);\r\n            alert(\"An error occurred please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(event);\r\n        const newVal = textAreaRef.current.value;\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate);\r\n        textAreaRef.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea\r\n                    ref={textAreaRef}\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    name=\"tweet\"\r\n                ></textarea>\r\n                <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n                    Tweet\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}