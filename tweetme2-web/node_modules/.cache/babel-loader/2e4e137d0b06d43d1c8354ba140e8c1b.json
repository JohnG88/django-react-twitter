{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johna\\\\Documents\\\\django-twitter-react\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { loadTweets } from \"../lookup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TweetsComponent(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), \"button\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = TweetsComponent;\nexport function TweetsList(props) {\n  _s();\n\n  const [tweets, setTweets] = useState([{\n    content: 123\n  }]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      // console.log(response, status)\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error!\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n_s(TweetsList, \"VkhH8aE+s49hk7u2SrS8/E9PcHc=\");\n\n_c2 = TweetsList;\nexport function ActionBtn(props) {\n  _s2();\n\n  const {\n    tweet,\n    action\n  } = props; // remember likes is variable and setLikes is to update variable\n\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : \"btn btn-primary btn-sm\"; // if action.display then show action.display else show 'Action'\n\n  const actionDisplay = action.display ? action.display : \"Action\"; // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\n\n  const display = action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === \"like\") {\n      if (userLike === true) {\n        // perhaps unlike it?\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ActionBtn, \"IF0IXDYzKRa1MgKiZWFZOaazeds=\");\n\n_c3 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [tweet.id, \" - \", tweet.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"like\",\n            display: \"Likes\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"unlike\",\n            display: \"Unlike\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"retweet\",\n            display: \"Retweet\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c4 = Tweet;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TweetsComponent\");\n$RefreshReg$(_c2, \"TweetsList\");\n$RefreshReg$(_c3, \"ActionBtn\");\n$RefreshReg$(_c4, \"Tweet\");","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsComponent","props","TweetsList","tweets","setTweets","content","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","likes","setLikes","userLike","setUserLike","className","actionDisplay","display","type","handleClick","event","preventDefault","Tweet","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { loadTweets } from \"../lookup\";\r\n\r\nexport function TweetsComponent(props) {\r\n\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <textarea className=\"form-control\">\r\n                    \r\n                </textarea>\r\n                button\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const [tweets, setTweets] = useState([{ content: 123 }]);\r\n    useEffect(() => {\r\n        const myCallback = (response, status) => {\r\n            // console.log(response, status)\r\n            if (status === 200) {\r\n                setTweets(response);\r\n            } else {\r\n                alert(\"There was an error!\");\r\n            }\r\n        };\r\n        loadTweets(myCallback);\r\n    }, []);\r\n    return tweets.map((item, index) => {\r\n        return (\r\n            <Tweet\r\n                tweet={item}\r\n                key={`${index}-{item.id}`}\r\n                className=\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\r\n            />\r\n        );\r\n    });\r\n}\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action } = props;\r\n    // remember likes is variable and setLikes is to update variable\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\r\n    const className = props.className\r\n        ? props.className\r\n        : \"btn btn-primary btn-sm\";\r\n    // if action.display then show action.display else show 'Action'\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n    // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\r\n    const display =\r\n        action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        if (action.type === \"like\") {\r\n            if (userLike === true) {\r\n                // perhaps unlike it?\r\n                setLikes(likes - 1);\r\n                setUserLike(false);\r\n            } else {\r\n                setLikes(likes + 1);\r\n                setUserLike(true);\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <button className={className} onClick={handleClick}>\r\n            {display}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const { tweet } = props;\r\n    const className = props.className\r\n        ? props.className\r\n        : \"col-10 mx-auto col-md-6\";\r\n    return (\r\n        <>\r\n            <div className={className}>\r\n                <p>\r\n                    {tweet.id} - {tweet.content}\r\n                </p>\r\n                <div className=\"btn btn-group\">\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"like\", display: \"Likes\" }}\r\n                    />\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                    />\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}