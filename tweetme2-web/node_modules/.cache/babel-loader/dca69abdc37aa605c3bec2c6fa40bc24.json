{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johna\\\\Documents\\\\django-twitter-react\\\\tweetme2\\\\tweetme2-web\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Tweet } from \"./tweets\"; // useEffect will help into looking http requests from backend\n// useState\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TweetsList(props) {\n  _s();\n\n  const [tweets, setTweets] = useState([{\n    content: 123\n  }]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      // console.log(response, status)\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error!\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n}\n\n_s(TweetsList, \"VkhH8aE+s49hk7u2SrS8/E9PcHc=\");\n\n_c = TweetsList;\n\nfunction App() {\n  // function loadTweets is from index.html\n  function loadTweets(callback) {\n    // New instance of class\n    const xhr = new XMLHttpRequest(); // like python, xhr = new SomeClass()\n\n    const method = \"GET\";\n    const url = \"http://127.0.0.1:8000/api/tweets/\";\n    const responseType = \"json\";\n    xhr.responseType = responseType;\n    xhr.open(method, url);\n\n    xhr.onload = function () {\n      callback(xhr.response, xhr.status);\n    };\n\n    xhr.onerror = function (e) {\n      console.log(e);\n      callback({\n        message: \"The request was an error.\"\n      }, 400);\n    };\n\n    xhr.send();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 26\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tweets.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Tweet, {\n            tweet: item,\n            className: \"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\n          }, `${index}-{item.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TweetsList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/App.js"],"names":["React","useEffect","useState","Tweet","TweetsList","props","tweets","setTweets","content","myCallback","response","status","alert","loadTweets","App","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","onerror","e","console","log","message","send","logo","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,OAAO,WAAP;AAEA,SAASC,KAAT,QAAsB,UAAtB,C,CAEA;AACA;;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAC;AAAEM,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAD,CAApC;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,UAAU,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACrC;AACA,UAAIA,MAAM,KAAK,GAAf,EAAoB;AAChBJ,QAAAA,SAAS,CAACG,QAAD,CAAT;AACH,OAFD,MAEO;AACHE,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACH;AACJ,KAPD;;AAQAC,IAAAA,UAAU,CAACJ,UAAD,CAAV;AACH,GAVQ,EAUN,EAVM,CAAT;AAWH;;GAbQL,U;;KAAAA,U;;AAeT,SAASU,GAAT,GAAe;AACX;AACA,WAASD,UAAT,CAAoBE,QAApB,EAA8B;AAC1B;AACA,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ,CAF0B,CAEQ;;AAClC,UAAMC,MAAM,GAAG,KAAf;AACA,UAAMC,GAAG,GAAG,mCAAZ;AACA,UAAMC,YAAY,GAAG,MAArB;AAEAJ,IAAAA,GAAG,CAACI,YAAJ,GAAmBA,YAAnB;AACAJ,IAAAA,GAAG,CAACK,IAAJ,CAASH,MAAT,EAAiBC,GAAjB;;AACAH,IAAAA,GAAG,CAACM,MAAJ,GAAa,YAAY;AACrBP,MAAAA,QAAQ,CAACC,GAAG,CAACN,QAAL,EAAeM,GAAG,CAACL,MAAnB,CAAR;AACH,KAFD;;AAGAK,IAAAA,GAAG,CAACO,OAAJ,GAAc,UAAUC,CAAV,EAAa;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAT,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,OAAO,EAAE;AAAX,OAAD,EAA2C,GAA3C,CAAR;AACH,KAHD;;AAIAX,IAAAA,GAAG,CAACY,IAAJ;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,yCACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA,kBACKvB,MAAM,CAACwB,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,8BACI,QAAC,KAAD;AACI,YAAA,KAAK,EAAED,IADX;AAGI,YAAA,SAAS,EAAC;AAHd,aAEU,GAAEC,KAAM,YAFlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARA;AADL;AAAA;AAAA;AAAA;AAAA,cALJ,eAgBI;AACI,QAAA,SAAS,EAAC,UADd;AAEI,QAAA,IAAI,EAAC,qBAFT;AAGI,QAAA,MAAM,EAAC,QAHX;AAII,QAAA,GAAG,EAAC,qBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;MAlDQlB,G;AAoDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { Tweet } from \"./tweets\";\n\n// useEffect will help into looking http requests from backend\n// useState\n\nfunction TweetsList(props) {\n    const [tweets, setTweets] = useState([{ content: 123 }]);\n    useEffect(() => {\n        const myCallback = (response, status) => {\n            // console.log(response, status)\n            if (status === 200) {\n                setTweets(response);\n            } else {\n                alert(\"There was an error!\");\n            }\n        };\n        loadTweets(myCallback);\n    }, []);\n}\n\nfunction App() {\n    // function loadTweets is from index.html\n    function loadTweets(callback) {\n        // New instance of class\n        const xhr = new XMLHttpRequest(); // like python, xhr = new SomeClass()\n        const method = \"GET\";\n        const url = \"http://127.0.0.1:8000/api/tweets/\";\n        const responseType = \"json\";\n\n        xhr.responseType = responseType;\n        xhr.open(method, url);\n        xhr.onload = function () {\n            callback(xhr.response, xhr.status);\n        };\n        xhr.onerror = function (e) {\n            console.log(e);\n            callback({ message: \"The request was an error.\" }, 400);\n        };\n        xhr.send();\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <div>\n                    {tweets.map((item, index) => {\n                        return (\n                            <Tweet\n                                tweet={item}\n                                key={`${index}-{item.id}`}\n                                className=\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\n                            />\n                        );\n                    })}\n                </div>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}