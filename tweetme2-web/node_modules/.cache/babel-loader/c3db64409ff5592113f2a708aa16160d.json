{"ast":null,"code":"import _toConsumableArray from\"C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{apiTweetList}from'./lookup';import{Tweet}from'./detail';import{jsx as _jsx}from\"react/jsx-runtime\";export function TweetsList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tweetsInit=_useState2[0],setTweetsInit=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tweets=_useState4[0],setTweets=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),tweetsDidSet=_useState6[0],setTweetsDidSet=_useState6[1];useEffect(function(){var final=_toConsumableArray(props.newTweets).concat(tweetsInit);if(final.length!==tweets.length){setTweets(final);}},[props.newTweets,tweets,tweetsInit]);useEffect(function(){if(tweetsDidSet===false){var handleTweetListLookup=function handleTweetListLookup(response,status){// console.log(response, status)\nif(status===200){setTweetsInit(response);setTweetsDidSet(true);}else{alert(\"There was an error!\");}};apiTweetList(props.username,handleTweetListLookup);}},[tweetsInit,tweetsDidSet,setTweetsDidSet,props.username]);var handleDidRetweet=function handleDidRetweet(newTweet){var updateTweetsInit=_toConsumableArray(tweetsInit);updateTweetsInit.unshift(newTweet);setTweetsInit(updateTweetsInit);var updateFinalTweets=_toConsumableArray(tweets);updateFinalTweets.unshift(tweets);setTweets(updateFinalTweets);};return tweets.map(function(item,index){return/*#__PURE__*/_jsx(Tweet,{tweet:item,didRetweet:handleDidRetweet,className:\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"},\"\".concat(index,\"-{item.id}\"));});}","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/tweets/list.js"],"names":["React","useEffect","useState","apiTweetList","Tweet","TweetsList","props","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","length","handleTweetListLookup","response","status","alert","username","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index"],"mappings":"4XAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAAQC,YAAR,KAA2B,UAA3B,CACA,OAAQC,KAAR,KAAoB,UAApB,C,2CAEA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CAC9B,cAAoCJ,QAAQ,CAAC,EAAD,CAA5C,wCAAOK,UAAP,eAAmBC,aAAnB,eACA,eAA4BN,QAAQ,CAAC,EAAD,CAApC,yCAAOO,MAAP,eAAeC,SAAf,eACA,eAAwCR,QAAQ,CAAC,KAAD,CAAhD,yCAAOS,YAAP,eAAqBC,eAArB,eAEAX,SAAS,CAAC,UAAM,CACZ,GAAMY,CAAAA,KAAK,CAAG,mBAAIP,KAAK,CAACQ,SAAV,EAAqBC,MAArB,CAA4BR,UAA5B,CAAd,CACA,GAAIM,KAAK,CAACG,MAAN,GAAiBP,MAAM,CAACO,MAA5B,CAAoC,CAChCN,SAAS,CAACG,KAAD,CAAT,CACH,CACJ,CALQ,CAKN,CAACP,KAAK,CAACQ,SAAP,CAAkBL,MAAlB,CAA0BF,UAA1B,CALM,CAAT,CAOAN,SAAS,CAAC,UAAM,CACZ,GAAIU,YAAY,GAAK,KAArB,CAA4B,CACxB,GAAMM,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,QAAD,CAAWC,MAAX,CAAsB,CAChD;AACA,GAAIA,MAAM,GAAK,GAAf,CAAoB,CAChBX,aAAa,CAACU,QAAD,CAAb,CACAN,eAAe,CAAC,IAAD,CAAf,CACH,CAHD,IAGO,CACHQ,KAAK,CAAC,qBAAD,CAAL,CACH,CACJ,CARD,CASAjB,YAAY,CAACG,KAAK,CAACe,QAAP,CAAiBJ,qBAAjB,CAAZ,CACH,CACJ,CAbQ,CAaN,CAACV,UAAD,CAAaI,YAAb,CAA2BC,eAA3B,CAA4CN,KAAK,CAACe,QAAlD,CAbM,CAAT,CAeA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,QAAD,CAAc,CACnC,GAAMC,CAAAA,gBAAgB,oBAAMjB,UAAN,CAAtB,CACAiB,gBAAgB,CAACC,OAAjB,CAAyBF,QAAzB,EACAf,aAAa,CAACgB,gBAAD,CAAb,CACA,GAAME,CAAAA,iBAAiB,oBAAOjB,MAAP,CAAvB,CACAiB,iBAAiB,CAACD,OAAlB,CAA0BhB,MAA1B,EACAC,SAAS,CAACgB,iBAAD,CAAT,CACH,CAPD,CAQA,MAAOjB,CAAAA,MAAM,CAACkB,GAAP,CAAW,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC/B,mBACI,KAAC,KAAD,EACI,KAAK,CAAED,IADX,CAEI,UAAU,CAAEN,gBAFhB,CAII,SAAS,CAAC,yDAJd,YAGYO,KAHZ,eADJ,CAQH,CATM,CAAP,CAUH","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {apiTweetList} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit);\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final);\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                // console.log(response, status)\r\n                if (status === 200) {\r\n                    setTweetsInit(response);\r\n                    setTweetsDidSet(true);\r\n                } else {\r\n                    alert(\"There was an error!\");\r\n                }\r\n            };\r\n            apiTweetList(props.username, handleTweetListLookup);\r\n        }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit= [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    return tweets.map((item, index) => {\r\n        return (\r\n            <Tweet\r\n                tweet={item}\r\n                didRetweet={handleDidRetweet}\r\n                key={`${index}-{item.id}`}\r\n                className=\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\r\n            />\r\n        );\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}