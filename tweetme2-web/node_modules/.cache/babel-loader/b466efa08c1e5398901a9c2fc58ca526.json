{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johna\\\\Documents\\\\django-twitter-react\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { loadTweets } from \"../lookup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TweetsComponent(props) {\n  _s();\n\n  // createRef will allow to get value of textarea\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n    const newVal = textAreaRef.current.value;\n    let tempNewTweets = [...newTweets]; // push sends to end of array, unshift to top of array\n\n    tempNewTweets.unshift({\n      content: newVal,\n      likes: 0,\n      id: 12313\n    });\n    setNewTweets(tempNewTweets);\n    console.log(newVal);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3 \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\",\n          name: \"tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-3\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c = TweetsComponent;\nexport function TweetsList(props) {\n  _s2();\n\n  const [tweetsInit, setTweetsInit] = useState([props.newTweeta]);\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      // console.log(response, status)\n      if (status === 200) {\n        setTweetsInit(response);\n      } else {\n        alert(\"There was an error!\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n_s2(TweetsList, \"R6HkKiwGRnFMdid66ksXOtRKH3M=\");\n\n_c2 = TweetsList;\nexport function ActionBtn(props) {\n  _s3();\n\n  const {\n    tweet,\n    action\n  } = props; // remember likes is variable and setLikes is to update variable\n\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : \"btn btn-primary btn-sm\"; // if action.display then show action.display else show 'Action'\n\n  const actionDisplay = action.display ? action.display : \"Action\"; // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\n\n  const display = action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === \"like\") {\n      if (userLike === true) {\n        // perhaps unlike it?\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(ActionBtn, \"IF0IXDYzKRa1MgKiZWFZOaazeds=\");\n\n_c3 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [tweet.id, \" - \", tweet.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"like\",\n            display: \"Likes\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"unlike\",\n            display: \"Unlike\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"retweet\",\n            display: \"Retweet\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c4 = Tweet;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TweetsComponent\");\n$RefreshReg$(_c2, \"TweetsList\");\n$RefreshReg$(_c3, \"ActionBtn\");\n$RefreshReg$(_c4, \"Tweet\");","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleSubmit","event","preventDefault","console","log","newVal","current","value","tempNewTweets","unshift","content","likes","id","className","TweetsList","tweetsInit","setTweetsInit","newTweeta","tweets","setTweets","final","concat","length","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","setLikes","userLike","setUserLike","actionDisplay","display","type","handleClick","Tweet"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { loadTweets } from \"../lookup\";\r\n\r\nexport function TweetsComponent(props) {\r\n    // createRef will allow to get value of textarea\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(event);\r\n        const newVal = textAreaRef.current.value;\r\n        let tempNewTweets = [...newTweets]\r\n        // push sends to end of array, unshift to top of array\r\n        tempNewTweets.unshift({\r\n            content: newVal,\r\n            likes: 0,\r\n            id: 12313\r\n        })\r\n        setNewTweets(tempNewTweets)\r\n        console.log(newVal);\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <div className=\"col-12 mb-3 \">\r\n                <form onSubmit={handleSubmit}>\r\n                    <textarea ref={textAreaRef} required={true} className=\"form-control\" name=\"tweet\">\r\n                        \r\n                    </textarea>\r\n                    <button type=\"submit\"className=\"btn btn-primary my-3\">Tweet</button>\r\n                </form>\r\n            </div>\r\n            <TweetsList newTweets={newTweets}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([props.newTweeta ]);\r\n    const [tweets, setTweets] = useState([])\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n        \r\n    },[props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n        const myCallback = (response, status) => {\r\n            // console.log(response, status)\r\n            if (status === 200) {\r\n                setTweetsInit(response);\r\n            } else {\r\n                alert(\"There was an error!\");\r\n            }\r\n        };\r\n        loadTweets(myCallback);\r\n    }, []);\r\n    return tweets.map((item, index) => {\r\n        return (\r\n            <Tweet\r\n                tweet={item}\r\n                key={`${index}-{item.id}`}\r\n                className=\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\r\n            />\r\n        );\r\n    });\r\n}\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action } = props;\r\n    // remember likes is variable and setLikes is to update variable\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\r\n    const className = props.className\r\n        ? props.className\r\n        : \"btn btn-primary btn-sm\";\r\n    // if action.display then show action.display else show 'Action'\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n    // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\r\n    const display =\r\n        action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        if (action.type === \"like\") {\r\n            if (userLike === true) {\r\n                // perhaps unlike it?\r\n                setLikes(likes - 1);\r\n                setUserLike(false);\r\n            } else {\r\n                setLikes(likes + 1);\r\n                setUserLike(true);\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <button className={className} onClick={handleClick}>\r\n            {display}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const { tweet } = props;\r\n    const className = props.className\r\n        ? props.className\r\n        : \"col-10 mx-auto col-md-6\";\r\n    return (\r\n        <>\r\n            <div className={className}>\r\n                <p>\r\n                    {tweet.id} - {tweet.content}\r\n                </p>\r\n                <div className=\"btn btn-group\">\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"like\", display: \"Likes\" }}\r\n                    />\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                    />\r\n                    <ActionBtn\r\n                        tweet={tweet}\r\n                        action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}