{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johna\\\\Documents\\\\django-twitter-react\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TweetsList } from './list';\nimport { apiTweetCreate, apiTweetList } from \"./lookup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TweetsComponent(props) {\n  _s();\n\n  console.log(props); // const {username} = props\n  // createRef will allow to get value of textarea\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === 'false' ? false : true;\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      // push sends to end of array, unshift to top of array\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occurred please try again.\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [canTweet === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3 \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\",\n          name: \"tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-3\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c = TweetsComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetsComponent\");","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","TweetsList","apiTweetCreate","apiTweetList","TweetsComponent","props","console","log","textAreaRef","createRef","newTweets","setNewTweets","canTweet","handleBackendUpdate","response","status","tempNewTweets","unshift","alert","handleSubmit","event","preventDefault","newVal","current","value","className"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAAQC,UAAR,QAAyB,QAAzB;AAEA,SAAUC,cAAV,EAA0BC,YAA1B,QAA8C,UAA9C;;AAEA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADmC,CAEnC;AACA;;AACA,QAAMG,WAAW,gBAAGV,KAAK,CAACW,SAAN,EAApB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMY,QAAQ,GAAGP,KAAK,CAACO,QAAN,KAAmB,OAAnB,GAA6B,KAA7B,GAAqC,IAAtD;;AACA,QAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC9C;AACA,QAAIC,aAAa,GAAG,CAAC,GAAGN,SAAJ,CAApB;;AACA,QAAIK,MAAM,KAAK,GAAf,EAAoB;AAChB;AACAC,MAAAA,aAAa,CAACC,OAAd,CAAsBH,QAAtB;AACAH,MAAAA,YAAY,CAACK,aAAD,CAAZ;AACH,KAJD,MAIO;AACHV,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACAI,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,GAXD;;AAaA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,UAAME,MAAM,GAAGd,WAAW,CAACe,OAAZ,CAAoBC,KAAnC,CAH4B,CAI5B;;AACAtB,IAAAA,cAAc,CAACoB,MAAD,EAAST,mBAAT,CAAd;AACAL,IAAAA,WAAW,CAACe,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAEnB,KAAK,CAACoB,SAAtB;AAAA,eACKb,QAAQ,KAAK,IAAb,iBAAqB;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BAClB;AAAM,QAAA,QAAQ,EAAEO,YAAhB;AAAA,gCACI;AACI,UAAA,GAAG,EAAEX,WADT;AAEI,UAAA,QAAQ,EAAE,IAFd;AAGI,UAAA,SAAS,EAAC,cAHd;AAII,UAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADkB;AAAA;AAAA;AAAA;AAAA,YAD1B,eAcI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEE,SAAvB;AAAA,SAAsCL;AAAtC;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAhDeD,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport {TweetsList} from './list'\r\n\r\nimport {  apiTweetCreate, apiTweetList } from \"./lookup\";\r\n\r\nexport function TweetsComponent(props) {\r\n    console.log(props);\r\n    // const {username} = props\r\n    // createRef will allow to get value of textarea\r\n    const textAreaRef = React.createRef();\r\n    const [newTweets, setNewTweets] = useState([]);\r\n    \r\n    const canTweet = props.canTweet === 'false' ? false : true\r\n    const handleBackendUpdate = (response, status) => {\r\n        // backend api response handler\r\n        let tempNewTweets = [...newTweets];\r\n        if (status === 201) {\r\n            // push sends to end of array, unshift to top of array\r\n            tempNewTweets.unshift(response);\r\n            setNewTweets(tempNewTweets);\r\n        } else {\r\n            console.log(response);\r\n            alert(\"An error occurred please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(event);\r\n        const newVal = textAreaRef.current.value;\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate);\r\n        textAreaRef.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            {canTweet === true && <div className=\"col-12 mb-3 \">\r\n                <form onSubmit={handleSubmit}>\r\n                    <textarea\r\n                        ref={textAreaRef}\r\n                        required={true}\r\n                        className=\"form-control\"\r\n                        name=\"tweet\"\r\n                    ></textarea>\r\n                    <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n                        Tweet\r\n                    </button>\r\n                </form>\r\n            </div>}\r\n            <TweetsList newTweets={newTweets} {...props} />\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}