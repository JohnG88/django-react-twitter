{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johna\\\\Documents\\\\django-twitter-react\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { loadTweets } from '../lookup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TweetsList(props) {\n  _s();\n\n  const [tweets, setTweets] = useState([{\n    content: 123\n  }]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      // console.log(response, status)\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error!\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n_s(TweetsList, \"VkhH8aE+s49hk7u2SrS8/E9PcHc=\");\n\n_c = TweetsList;\nexport function ActionBtn(props) {\n  const className = props.className ? props.className : \"btn btn-primary btn-sm\";\n  const {\n    tweet,\n    action\n  } = props;\n  const actionDisplay = action.display ? action.display : 'Action';\n  const display = action.type === 'like' ? `${tweet.likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_c2 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [tweet.id, \" - \", tweet.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"like\",\n            display: 'Likes'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"unlike\",\n            display: 'Unlike'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n          tweet: tweet,\n          action: {\n            type: \"retweet\",\n            display: 'Retweet'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c3 = Tweet;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TweetsList\");\n$RefreshReg$(_c2, \"ActionBtn\");\n$RefreshReg$(_c3, \"Tweet\");","map":{"version":3,"sources":["C:/Users/johna/Documents/django-twitter-react/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsList","props","tweets","setTweets","content","myCallback","response","status","alert","map","item","index","ActionBtn","className","tweet","action","actionDisplay","display","type","likes","Tweet","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport {loadTweets} from '../lookup'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweets, setTweets] = useState([{ content: 123 }]);\r\n    useEffect(() => {\r\n        const myCallback = (response, status) => {\r\n            // console.log(response, status)\r\n            if (status === 200) {\r\n                setTweets(response);\r\n            } else {\r\n                alert(\"There was an error!\");\r\n            }\r\n        };\r\n        loadTweets(myCallback);\r\n    }, []);\r\n    return tweets.map((item, index) => {\r\n        return (\r\n            <Tweet\r\n                tweet={item}\r\n                key={`${index}-{item.id}`}\r\n                className=\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\r\n            />\r\n        );\r\n    });\r\n}\r\n\r\nexport function ActionBtn(props) {\r\n    const className = props.className\r\n        ? props.className\r\n        : \"btn btn-primary btn-sm\";\r\n    const { tweet, action } = props;\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const display = action.type === 'like' ? `${tweet.likes} ${actionDisplay}` : actionDisplay\r\n    return (\r\n        <button className={className}>{display}</button>\r\n    ) \r\n}\r\n\r\nexport function Tweet(props) {\r\n    const { tweet } = props;\r\n    const className = props.className\r\n        ? props.className\r\n        : \"col-10 mx-auto col-md-6\";\r\n    return (\r\n        <>\r\n            <div className={className}>\r\n                <p>\r\n                    {tweet.id} - {tweet.content}\r\n                </p>\r\n                <div className=\"btn btn-group\">\r\n                    <ActionBtn tweet={tweet} action={{ type: \"like\", display: 'Likes' }} />\r\n                    <ActionBtn tweet={tweet} action={{ type: \"unlike\", display: 'Unlike' }} />\r\n                    <ActionBtn tweet={tweet} action={{ type: \"retweet\", display: 'Retweet' }} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}