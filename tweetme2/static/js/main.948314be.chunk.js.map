{"version":3,"sources":["lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","response","status","onerror","e","console","log","message","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","type","handleActionBackendEvent","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","window","location","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","href","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createElement","tweetsEl","getElementById","dataset","ReactDOM","render","setNewTweets","canTweet","tempNewTweets","querySelectorAll","forEach","container"],"mappings":"yLAgBO,SAASA,EAAcC,EAAQC,EAAUC,EAAUC,GACtD,IAAIC,EACAD,IACAC,EAAWC,KAAKC,UAAUH,IAG9B,IAAMI,EAAM,IAAIC,eAEVC,EAAG,mCAA+BR,GAExCM,EAAIG,aAAe,OACnBH,EAAII,KAAKX,EAAQS,GACjB,IAAMG,EA5BV,SAAmBC,GACf,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE5B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIZ,OAAON,EAeWU,CAAU,aAC5BjB,EAAIkB,iBAAiB,eAAgB,oBACjCb,IACAL,EAAIkB,iBAAiB,wBAAyB,kBAC9ClB,EAAIkB,iBAAiB,mBAAoB,kBACzClB,EAAIkB,iBAAiB,cAAeb,IAExCL,EAAImB,OAAS,WACTxB,EAASK,EAAIoB,SAAUpB,EAAIqB,SAE/BrB,EAAIsB,QAAU,SAAUC,GACpBC,QAAQC,IAAIF,GACZ5B,EAAS,CAAE+B,QAAS,6BAA+B,MAGvD1B,EAAI2B,KAAK9B,G,WCvCN,SAAS+B,EAAUC,GACtB,IAAQC,EAAoCD,EAApCC,MAAOC,EAA6BF,EAA7BE,OAAQC,EAAqBH,EAArBG,iBACjBC,EAAQH,EAAMG,MAAQH,EAAMG,MAAQ,EAIpCC,EAAYL,EAAMK,UAClBL,EAAMK,UACN,yBAEAC,EAAgBJ,EAAOK,QAAUL,EAAOK,QAAU,SAElDA,EACc,SAAhBL,EAAOM,KAAP,UAA4BJ,EAA5B,YAAqCE,GAAkBA,EACrDG,EAA2B,SAAClB,EAAUC,GACxCG,QAAQC,IAAIL,EAAUC,GACN,MAAXA,GAA6B,MAAXA,IAAmBW,GAEtCA,EAAiBZ,EAAUC,IAQnC,OACI,wBAAQa,UAAWA,EAAWK,QALd,SAACC,GACjBA,EAAMC,iBCrBP,SAAwBC,EAASX,EAAQpC,GAE5CH,EAAc,OAAQ,kBAAmBG,EAD5B,CAACgD,GAAID,EAASX,OAAQA,IDqB/Ba,CAAed,EAAMa,GAAIZ,EAAOM,KAAMC,IAGtC,SACKF,I,kBE7BN,SAASS,EAAYhB,GACxB,IAAQC,EAAUD,EAAVC,MACR,OACI,mCACKA,EAAMgB,OACH,qBAAKZ,UAAU,MAAf,SACI,sBAAKA,UAAU,oCAAf,UACI,mBAAGA,UAAU,wBAAb,qBACA,cAACa,EAAD,CAAOC,aAAW,EAACd,UAAU,IAAIJ,MAAOA,EAAMgB,cAGtD,OAKT,SAASC,EAAMlB,GAClB,IAAQC,EAAmCD,EAAnCC,MAAOmB,EAA4BpB,EAA5BoB,WAAYD,EAAgBnB,EAAhBmB,YAC3B,EAAsCE,mBAClCrB,EAAMC,MAAQD,EAAMC,MAAQ,MADhC,mBAAOqB,EAAP,KAAoBC,EAApB,KAGMlB,EAAYL,EAAMK,UAClBL,EAAMK,UACN,0BAEAmB,EADOC,OAAOC,SAASC,SACVH,MAAL,YAAW,WAAX,cACRI,EAAaJ,EAAQA,EAAMK,OAAOC,SAAW,EAE7CC,EAAW,UAAG9B,EAAMa,MAAT,UAAqBc,GAKhCI,EAAsB,SAACC,EAAgBzC,GAC1B,MAAXA,EACA+B,EAAeU,GACG,MAAXzC,GAEH4B,GACAA,EAAWa,IAKvB,OACI,mCACI,sBAAK5B,UAAWA,EAAhB,UACI,gCACI,8BACKJ,EAAMa,GADX,MACkBb,EAAMiC,WAExB,cAAClB,EAAD,CAAaf,MAAOA,OAGpB,sBAAKI,UAAU,gBAAf,UACEiB,IAA+B,IAAhBH,GAAyB,eAAC,IAAMgB,SAAP,WAClC,cAACpC,EAAD,CACIE,MAAOqB,EACPnB,iBAAkB6B,EAClB9B,OAAQ,CAAEM,KAAM,OAAQD,QAAS,WAErC,cAACR,EAAD,CACIE,MAAOqB,EACPnB,iBAAkB6B,EAClB9B,OAAQ,CAAEM,KAAM,SAAUD,QAAS,YAEvC,cAACR,EAAD,CACIE,MAAOqB,EACPnB,iBAAkB6B,EAClB9B,OAAQ,CAAEM,KAAM,UAAWD,QAAS,iBAG9B,IAAbwB,EAAoB,KAAO,wBAAQ1B,UAAU,iCAAiCK,QA3ChF,SAACC,GAChBA,EAAMC,iBACNa,OAAOC,SAASU,KAAhB,WAA2BnC,EAAMa,KAyCW,0B,WCvE7C,SAASuB,EAAWrC,GACvB,MAAoCqB,mBAAS,IAA7C,mBAAOiB,EAAP,KAAmBC,EAAnB,KACA,EAA4BlB,mBAAS,IAArC,mBAAOmB,EAAP,KAAeC,EAAf,KACA,EAAwCpB,oBAAS,GAAjD,mBAAOqB,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACN,IAAMC,EAAQ,YAAI7C,EAAM8C,WAAWC,OAAOT,GACtCO,EAAM7D,SAAWwD,EAAOxD,QACxByD,EAAUI,KAEf,CAAC7C,EAAM8C,UAAWN,EAAQF,IAE7BM,qBAAU,WACN,IAAqB,IAAjBF,EAAwB,EFF7B,SAAsBM,EAAUlF,GACnC,IAAID,EAAW,WACXmF,IACAnF,EAAQ,4BAAwBmF,IAEpCrF,EAAc,MAAOE,EAAUC,GEOvBmF,CAAajD,EAAMgD,UATW,SAACzD,EAAUC,GAEtB,MAAXA,GACA+C,EAAchD,GACdoD,GAAgB,IAEhBO,MAAM,6BAKnB,CAACZ,EAAYI,EAAcC,EAAiB3C,EAAMgD,WAErD,IAAMG,EAAmB,SAACC,GACtB,IAAMC,EAAiB,YAAKf,GAC5Be,EAAiBC,QAAQF,GACzBb,EAAcc,GACd,IAAME,EAAiB,YAAOf,GAC9Be,EAAkBD,QAAQd,GAC1BC,EAAUc,IAEd,OAAOf,EAAOgB,KAAI,SAACC,EAAMC,GACrB,OACI,cAACxC,EAAD,CACIjB,MAAOwD,EACPrC,WAAY+B,EAEZ9C,UAAU,2DAJd,UAGYqD,EAHZ,kB,WCrCL,SAASC,EAAY3D,GACxBL,QAAQC,IAAII,GAGZ,IAAM4D,EAAcC,IAAMC,YACnBC,EAAY/D,EAAZ+D,SAIDC,EAAsB,SAACzE,EAAUC,GAGpB,MAAXA,EAGAuE,EAASxE,IAETI,QAAQC,IAAIL,GACZ2D,MAAM,yCAad,OACI,qBAAK7C,UAAWL,EAAMK,UAAtB,SACI,uBAAM4D,SAXO,SAACtD,GAClBA,EAAMC,iBACNjB,QAAQC,IAAIe,GACZ,IAAMuD,EAASN,EAAYO,QAAQC,MH1BvCzG,EAAc,OAAQ,kBG4BKqG,EH5BwB,CAAC9B,QG4BjCgC,IACfN,EAAYO,QAAQC,MAAQ,IAKxB,UACI,0BACIC,IAAKT,EACLU,UAAU,EACVjE,UAAU,eACV5B,KAAK,UAET,wBAAQ+B,KAAK,SAASH,UAAU,uBAAhC,wBCrBT,SAASkE,EAAqBvE,GACjC,IAAOa,EAAWb,EAAXa,QACP,EAAkCQ,oBAAS,GAA3C,mBAAOmD,EAAP,KAAkBC,EAAlB,KACA,EAA0BpD,mBAAS,MAAnC,mBAAOpB,EAAP,KAAcyE,EAAd,KAEMC,EAAsB,SAACpF,EAAUC,GACpB,MAAXA,EACAkF,EAASnF,GAET2D,MAAM,2CAWd,OARAN,qBAAU,YACY,IAAd4B,KJzBL,SAAwB3D,EAAS/C,GACpCH,EAAc,MAAD,kBAAmBkD,GAAW/C,GIyBnC8G,CAAe/D,EAAS8D,GACxBF,GAAa,MAGlB,CAACD,EAAWC,IAEE,OAAVxE,EAAiB,KAAO,cAACiB,EAAD,CAAOjB,MAAOA,EAAOI,UAAWL,EAAMK,YC3CzE,IAYewE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCORpF,EAAImE,IAAMyB,cACVC,EAAW5G,SAAS6G,eAAe,aACrCD,IACA5F,QAAQC,IAAI2F,EAASE,SACrBC,IAASC,OAAOjG,GFVb,SAAyBM,GAC5B,MAAkCqB,mBAAS,IAA3C,mBAAOyB,EAAP,KAAkB8C,EAAlB,KACMC,EAA8B,UAAnB7F,EAAM6F,SAOvB,OAAO,sBAAKxF,UAAWL,EAAMK,UAAtB,WACW,IAAbwF,GAAqB,cAAClC,EAAD,CAAaI,SAPhB,SAACX,GACpB,IAAI0C,EAAa,YAAOhD,GACxBgD,EAAcxC,QAAQF,GACtBwC,EAAaE,IAIgDzF,UAAU,gBACvE,cAACgC,EAAD,aAAYS,UAAWA,GAAe9C,SEDPuF,EAASE,SACxCF,IAIoB5G,SAASoH,iBAAiB,qBAElCC,SAAQ,SAAAC,GACxBP,IAASC,OAAOjG,EAAE6E,EAAsB0B,EAAUR,SAC9CQ,MAORpB,M","file":"static/js/main.948314be.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n    if (data) {\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n    // New instance of class\r\n    const xhr = new XMLHttpRequest(); // like python, xhr = new SomeClass()\r\n    \r\n    const url = `http://127.0.0.1:8000/api${endpoint}`;\r\n\r\n    xhr.responseType = 'json';\r\n    xhr.open(method, url);\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.setRequestHeader('Content-Type', 'application/json')\r\n    if (csrftoken) {\r\n        xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\r\n        xhr.setRequestHeader('X-CSRFToken', csrftoken)\r\n    }\r\n    xhr.onload = function () {\r\n        callback(xhr.response, xhr.status);\r\n    };\r\n    xhr.onerror = function (e) {\r\n        console.log(e);\r\n        callback({ message: \"The request was an error.\" }, 400);\r\n    };\r\n    // console.log(jsonData);\r\n    xhr.send(jsonData);\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction } = props;\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    // remember likes is variable and setLikes is to update variable\r\n    // const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    // const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\r\n    const className = props.className\r\n        ? props.className\r\n        : \"btn btn-primary btn-sm\";\r\n    // if action.display then show action.display else show 'Action'\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n    // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\r\n    const display =\r\n        action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status);\r\n        if ((status === 200 || status === 201) && didPerformAction) {\r\n            // setLikes(response.likes);\r\n            didPerformAction(response, status)\r\n            // setUserLike(true)\r\n        }\r\n    };\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n    };\r\n    return (\r\n        <button className={className} onClick={handleClick}>\r\n            {display}\r\n        </button>\r\n    );\r\n}","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    backendLookup('POST', '/tweets/create/', callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup('POST', '/tweets/action/', callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup('GET', `/tweets/${tweetId}`, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback) {\r\n    let endpoint = '/tweets/'\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    backendLookup('GET', endpoint, callback)\r\n}","import React, {useState} from 'react'\r\nimport {ActionBtn} from './buttons'\r\n\r\nexport function ParentTweet(props) {\r\n    const { tweet } = props;\r\n    return (\r\n        <>\r\n            {tweet.parent ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-11 mx-auto p-3 border rounded\">\r\n                        <p className=\"mb-0 text-muted small\">Retweet</p>\r\n                        <Tweet hideActions className=\" \" tweet={tweet.parent} />\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const { tweet, didRetweet, hideActions } = props;\r\n    const [actionTweet, setActionTweet] = useState(\r\n        props.tweet ? props.tweet : null\r\n    );\r\n    const className = props.className\r\n        ? props.className\r\n        : \"col-10 mx-auto col-md-6\";\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n        \r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n    }\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n            setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n            // let the tweet list know.\r\n            if (didRetweet) {\r\n                didRetweet(newActionTweet)\r\n            }\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <div className={className}>\r\n                <div>\r\n                    <p>\r\n                        {tweet.id} - {tweet.content}\r\n                    </p>\r\n                    <ParentTweet tweet={tweet} />\r\n                </div>\r\n                {/* if actionTweet and hideActions are not = to true then hide the buttons */}\r\n                    <div className=\"btn btn-group\">\r\n                    {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                            <ActionBtn\r\n                                tweet={actionTweet}\r\n                                didPerformAction={handlePerformAction}\r\n                                action={{ type: \"like\", display: \"Likes\" }}\r\n                            />\r\n                            <ActionBtn\r\n                                tweet={actionTweet}\r\n                                didPerformAction={handlePerformAction}\r\n                                action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                            />\r\n                            <ActionBtn\r\n                                tweet={actionTweet}\r\n                                didPerformAction={handlePerformAction}\r\n                                action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                            />\r\n                        </React.Fragment>}\r\n                        {isDetail === true ? null : <button className=\"btn btn-outline-primary btn-sm\" onClick={handleLink}>View</button>}\r\n                    </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {apiTweetList} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit);\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final);\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                // console.log(response, status)\r\n                if (status === 200) {\r\n                    setTweetsInit(response);\r\n                    setTweetsDidSet(true);\r\n                } else {\r\n                    alert(\"There was an error!\");\r\n                }\r\n            };\r\n            apiTweetList(props.username, handleTweetListLookup);\r\n        }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit= [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    return tweets.map((item, index) => {\r\n        return (\r\n            <Tweet\r\n                tweet={item}\r\n                didRetweet={handleDidRetweet}\r\n                key={`${index}-{item.id}`}\r\n                className=\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\r\n            />\r\n        );\r\n    });\r\n}","import React from \"react\"; \r\n\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n    console.log(props);\r\n    // const {username} = props\r\n    // createRef will allow to get value of textarea\r\n    const textAreaRef = React.createRef();\r\n    const {didTweet} = props\r\n    // const [newTweets, setNewTweets] = useState([]);\r\n    \r\n    // const canTweet = props.canTweet === 'false' ? false : true\r\n    const handleBackendUpdate = (response, status) => {\r\n        // backend api response handler\r\n        // let tempNewTweets = [...newTweets];\r\n        if (status === 201) {\r\n            // push sends to end of array, unshift to top of array\r\n            // tempNewTweets.unshift(response);\r\n            didTweet(response);\r\n        } else {\r\n            console.log(response);\r\n            alert(\"An error occurred please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(event);\r\n        const newVal = textAreaRef.current.value;\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate);\r\n        textAreaRef.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea\r\n                    ref={textAreaRef}\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    name=\"tweet\"\r\n                ></textarea>\r\n                <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n                    Tweet\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {TweetsList} from './list' \r\nimport {apiTweetDetail} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nimport {TweetCreate} from './create'\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === 'false' ? false : true\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n    }\r\n\r\n    return <div className={props.className}>\r\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n    const {tweetId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n    \r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response)\r\n        } else {\r\n            alert('There was an error finding your tweet.')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n\r\n    }, [didLookup, setDidLookup])\r\n\r\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./App\";\nimport { TweetsComponent, TweetDetailComponent } from \"./tweets\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <App />\n//     </React.StrictMode>,\n//     document.getElementById(\"root\")\n// );\n// lines below help to be able to use attributes from index.html div\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme-2\");\nif (tweetsEl) {\n    console.log(tweetsEl.dataset)\n    ReactDOM.render(e(TweetsComponent, tweetsEl.dataset),\n        tweetsEl\n    );\n}\n\nconst tweetDetailElements = document.querySelectorAll('.tweetme-2-detail')\n\ntweetDetailElements.forEach(container => {\n    ReactDOM.render(e(TweetDetailComponent, container.dataset),\n        container\n    );\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}