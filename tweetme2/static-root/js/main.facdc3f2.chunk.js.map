{"version":3,"sources":["lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/feed.js","tweets/create.js","tweets/components.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","message","send","apiTweetFeed","nextUrl","undefined","replace","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","type","handleActionBackendEvent","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","username","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createElement","tweetFeedEl","getElementById","ReactDOM","render","setNewTweets","canTweet","tempNewTweets","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.facdc3f2.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n    if (data) {\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n    // New instance of class\r\n    const xhr = new XMLHttpRequest(); // like python, xhr = new SomeClass()\r\n    \r\n    const url = `http://localhost:8000/api${endpoint}`;\r\n\r\n    xhr.responseType = 'json';\r\n    xhr.open(method, url);\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.setRequestHeader('Content-Type', 'application/json')\r\n    if (csrftoken) {\r\n        // xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\r\n        xhr.setRequestHeader('X-CSRFToken', csrftoken)\r\n    }\r\n    xhr.onload = function () {\r\n        if (xhr.status === 403) {\r\n            const detail = xhr.response.detail\r\n            if (detail === 'Authentication credentials were not provided.') {\r\n                if (window.location.href.indexOf('login') === -1) {\r\n                    window.location.href = '/login?showLoginRequired=true'\r\n                }\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status);\r\n    };\r\n    xhr.onerror = function (e) {\r\n        console.log('error', e);\r\n        callback({ message: \"The request was an error.\" }, 400);\r\n    };\r\n    // console.log(jsonData);\r\n    xhr.send(jsonData);\r\n}\r\n\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    backendLookup('POST', '/tweets/create/', callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup('POST', '/tweets/action/', callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup('GET', `/tweets/${tweetId}`, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        // replacing http://localhost:8000/api with empty string('')\r\n        endpoint = nextUrl.replace('http://localhost:8000/api', '')\r\n    }\r\n    backendLookup('GET', endpoint, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint = '/tweets/feed/'\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        // replacing http://localhost:8000/api with empty string('')\r\n        endpoint = nextUrl.replace('http://localhost:8000/api', '')\r\n    }\r\n    backendLookup('GET', endpoint, callback)\r\n}","import React from \"react\";\r\n\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction } = props;\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    // remember likes is variable and setLikes is to update variable\r\n    // const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    // const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\r\n    const className = props.className\r\n        ? props.className\r\n        : \"btn btn-primary btn-sm\";\r\n    // if action.display then show action.display else show 'Action'\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n    // if action type = 'like' show tweet likes actionDisplay, else show actionDisplay\r\n    const display =\r\n        action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status);\r\n        if ((status === 200 || status === 201) && didPerformAction) {\r\n            // setLikes(response.likes);\r\n            didPerformAction(response, status)\r\n            // setUserLike(true)\r\n        }\r\n    };\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n    };\r\n    return (\r\n        <button className={className} onClick={handleClick}>\r\n            {display}\r\n        </button>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function UserLink (props) {\r\n    const {username} = props\r\n\r\n    const handleUserLink = (event) => {\r\n        window.location.href = `/profile/${username}`\r\n    }\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserDisplay (props) {\r\n    const {user, includeFullName} = props\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\r\n\r\n    return <React.Fragment>\r\n        {nameDisplay} \r\n        <UserLink username={user.username}>@{user.username}</UserLink>\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserPicture (props) {\r\n    const {user} = props;\r\n    return <UserLink username={user.username}><span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n        {user.username[0]}\r\n    </span></UserLink>\r\n}","import React, { useState } from \"react\";\r\nimport { ActionBtn } from \"./buttons\";\r\nimport {UserDisplay, UserPicture} from '../profiles'\r\n\r\n\r\nexport function ParentTweet(props) {\r\n    const { tweet } = props;\r\n    return (\r\n        <>\r\n            {tweet.parent ? \r\n                <Tweet isRetweet retweeter={props.retweeter} hideActions className={\" \"} tweet={tweet.parent} /> : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\r\n    const [actionTweet, setActionTweet] = useState(\r\n        props.tweet ? props.tweet : null\r\n    );\r\n    let className = props.className\r\n        ? props.className\r\n        : \"col-10 mx-auto col-md-6\";\r\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n    const path = window.location.pathname;\r\n    const match = path.match(/(?<tweetid>\\d+)/);\r\n    const urlTweetId = match ? match.groups.tweetid : -1;\r\n\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n    const handleLink = (event) => {\r\n        event.preventDefault();\r\n        window.location.href = `/${tweet.id}`;\r\n    };\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n            setActionTweet(newActionTweet);\r\n        } else if (status === 201) {\r\n            // let the tweet list know.\r\n            if (didRetweet) {\r\n                didRetweet(newActionTweet);\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className={className}>\r\n                {isRetweet === true && \r\n                    <div className='mb-2'>\r\n                        <span className='small text-muted'>Retweet via <UserDisplay user={retweeter}/></span>\r\n                    </div>}\r\n                <div className=\"d-flex\">\r\n                    <div className=\"col-1\">\r\n                        <UserPicture user={tweet.user} />\r\n                    </div>\r\n                    <div className=\"col-11\">\r\n                        <div>\r\n                            <p>\r\n                            <UserDisplay includeFullName user={tweet.user}/>\r\n                            </p>\r\n                            <p>{tweet.content}</p>\r\n                            <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n                        </div>\r\n                        {/* if actionTweet and hideActions are not = to true then hide the buttons */}\r\n                        <div className=\"btn btn-group px-0\">\r\n                            {actionTweet && hideActions !== true && (\r\n                                <React.Fragment>\r\n                                    <ActionBtn\r\n                                        tweet={actionTweet}\r\n                                        didPerformAction={handlePerformAction}\r\n                                        action={{\r\n                                            type: \"like\",\r\n                                            display: \"Likes\",\r\n                                        }}\r\n                                    />\r\n                                    <ActionBtn\r\n                                        tweet={actionTweet}\r\n                                        didPerformAction={handlePerformAction}\r\n                                        action={{\r\n                                            type: \"unlike\",\r\n                                            display: \"Unlike\",\r\n                                        }}\r\n                                    />\r\n                                    <ActionBtn\r\n                                        tweet={actionTweet}\r\n                                        didPerformAction={handlePerformAction}\r\n                                        action={{\r\n                                            type: \"retweet\",\r\n                                            display: \"Retweet\",\r\n                                        }}\r\n                                    />\r\n                                </React.Fragment>\r\n                            )}\r\n                            {isDetail === true ? null : (\r\n                                <button\r\n                                    className=\"btn btn-outline-primary btn-sm\"\r\n                                    onClick={handleLink}\r\n                                >\r\n                                    View\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {apiTweetFeed} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    // useState is set to null because next url will eventually become null\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit);\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final);\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                // console.log(response, status)\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results);\r\n                    setTweetsDidSet(true);\r\n                } else {\r\n                    alert(\"There was an error!\");\r\n                }\r\n            };\r\n            apiTweetFeed(handleTweetListLookup);\r\n        }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit= [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    const newTweets = [...tweets].concat(response.results)\r\n                    setTweetsInit(newTweets);\r\n                    setTweets(newTweets);\r\n                } else {\r\n                    alert(\"There was an error!\");\r\n                }\r\n            }\r\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n            console.log('nextUrl', nextUrl)\r\n            console.log('next response');\r\n        }\r\n    }\r\n    return <React.Fragment>\r\n        {tweets.map((item, index) => {\r\n            return (\r\n                <Tweet\r\n                    tweet={item}\r\n                    didRetweet={handleDidRetweet}\r\n                    key={`${index}-{item.id}`}\r\n                    className=\"col-12 col-md-10 mx-auto mb-4 tweet border rounded py-3\"\r\n                />\r\n            );\r\n        })}\r\n        {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n}","import React from \"react\"; \r\n\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n    console.log(props);\r\n    // const {username} = props\r\n    // createRef will allow to get value of textarea\r\n    const textAreaRef = React.createRef();\r\n    const {didTweet} = props\r\n    // const [newTweets, setNewTweets] = useState([]);\r\n    \r\n    // const canTweet = props.canTweet === 'false' ? false : true\r\n    const handleBackendUpdate = (response, status) => {\r\n        // backend api response handler\r\n        // let tempNewTweets = [...newTweets];\r\n        if (status === 201) {\r\n            // push sends to end of array, unshift to top of array\r\n            // tempNewTweets.unshift(response);\r\n            didTweet(response);\r\n        } else {\r\n            console.log(response);\r\n            alert(\"An error occurred please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(event);\r\n        const newVal = textAreaRef.current.value;\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate);\r\n        textAreaRef.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea\r\n                    ref={textAreaRef}\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    name=\"tweet\"\r\n                ></textarea>\r\n                <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n                    Tweet\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { TweetsList } from \"./list\";\r\nimport { apiTweetDetail } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\nimport { FeedList } from \"./feed\";\r\nimport { TweetCreate } from \"./create\";\r\n\r\nexport function FeedComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n    const canTweet = props.canTweet === \"false\" ? false : true;\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets];\r\n        tempNewTweets.unshift(newTweet);\r\n        setNewTweets(tempNewTweets);\r\n    };\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            {canTweet === true && (\r\n                <TweetCreate\r\n                    didTweet={handleNewTweet}\r\n                    className=\"col-12 mb-3\"\r\n                />\r\n            )}\r\n            <FeedList newTweets={newTweets} {...props} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n    const canTweet = props.canTweet === \"false\" ? false : true;\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets];\r\n        tempNewTweets.unshift(newTweet);\r\n        setNewTweets(tempNewTweets);\r\n    };\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            {canTweet === true && (\r\n                <TweetCreate\r\n                    didTweet={handleNewTweet}\r\n                    className=\"col-12 mb-3\"\r\n                />\r\n            )}\r\n            <TweetsList newTweets={newTweets} {...props} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n    const { tweetId } = props;\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [tweet, setTweet] = useState(null);\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response);\r\n        } else {\r\n            alert(\"There was an error finding your tweet.\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleBackendLookup);\r\n            setDidLookup(true);\r\n        }\r\n    }, [didLookup, setDidLookup]);\r\n\r\n    return tweet === null ? null : (\r\n        <Tweet tweet={tweet} className={props.className} />\r\n    );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./App\";\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from \"./tweets\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <App />\n//     </React.StrictMode>,\n//     document.getElementById(\"root\")\n// );\n// lines below help to be able to use attributes from index.html div\nconst e = React.createElement\n// const tweetsEl = document.getElementById(\"tweetme-2\");\n// if (tweetsEl) {\n//     console.log(tweetsEl.dataset)\n//     ReactDOM.render(e(TweetsComponent, tweetsEl.dataset),\n//         tweetsEl\n//     );\n// }\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\");\nif (tweetFeedEl) {\n    ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset),\n        tweetFeedEl\n    );\n}\n\nconst tweetDetailElements = document.querySelectorAll('.tweetme-2-detail')\n\ntweetDetailElements.forEach(container => {\n    ReactDOM.render(e(TweetDetailComponent, container.dataset),\n        container\n    );\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}